MODULE main
DEFINE
rows := 9;
cols := 8;

down := (row + 1 < rows &											-- no jumping off the board
(board[row + 1][ col] = "_" | board[row + 1 ][col]  = "." |							-- either next place is floor or goal
(board[row + 1][col] = "$" & row + 2 < rows & (board[row + 2][col] = "_" | board[row + 2][col] = "."))));	-- Or next place has a box and after that there's an floor or goal

up := (row - 1 >= 0 &
(board[row - 1][ col] = "_" | board[row - 1 ][col]  = "." |
(board[row - 1][col] = "$" & row - 2 >= 0 & (board[row - 2][col] = "_" | board[row - 2][col] = "."))));

right := (col + 1 < cols &
(board[row][col + 1] = "_" | board[row ][col + 1]  = "." |
(board[row][col + 1] = "$" & col + 2 < cols & (board[row][col + 2] = "_" | board[row][col + 2] = "."))));

left := (col - 1 >= 0 &
(board[row][col - 1] = "_" | board[row ][col - 1]  = "." |
(board[row][col - 1] = "$" & col - 2 >= 0 & (board[row][col - 2] = "_" | board[row][col - 2] = "."))));


VAR
row : 0..rows - 1 ;
col : 0..cols - 1;
direction : {l, r, u, d, stop};
board:array 0 .. 8 of array 0 .. 7 of {"@" , "+", "$", "*", "#", ".", "_"};

ASSIGN
 	init(board[0][0]) := "#"; init(board[0][1]) :=
	"#";init(board[0][2]) := "#";init(board[0][3]) :=
	"#";init(board[0][4]) := "#";init(board[0][5]) := "#";
	init(board[0][6]) := "#";init(board[0][7]) := "#"; 

	init(board[1][0]) := "#"; init(board[1][1]) :=
	"#";init(board[1][2]) := "#";init(board[1][3]) :=
	"_";init(board[1][4]) := "_";init(board[1][5]) := "_";
	init(board[1][6]) := "#";init(board[1][7]) := "#";

	init(board[2][0]) := "#"; init(board[2][1]) :=
	".";init(board[2][2]) := "@";init(board[2][3]) :=
	"_";init(board[2][4]) := "_";init(board[2][5]) := "_";
	init(board[2][6]) := "#";init(board[2][7]) := "#"; 

	init(board[3][0]) := "#"; init(board[3][1]) :=
	"#";init(board[3][2]) := "#";init(board[3][3]) :=
	"_";init(board[3][4]) := "$";init(board[3][5]) := ".";
	init(board[3][6]) := "#";init(board[3][7]) := "#";  

	init(board[4][0]) := "#"; init(board[4][1]) :=
	".";init(board[4][2]) := "#";init(board[4][3]) :=
	"#";init(board[4][4]) := "$";init(board[4][5]) := "_";
	init(board[4][6]) := "#";init(board[4][7]) := "#"; 

	init(board[5][0]) := "#"; init(board[5][1]) :=
	"_";init(board[5][2]) := "#";init(board[5][3]) :=
	"_";init(board[5][4]) := ".";init(board[5][5]) := "_";
	init(board[5][6]) := "#";init(board[5][7]) := "#"; 

	init(board[6][0]) := "#"; init(board[6][1]) :=
	"$";init(board[6][2]) := "_";init(board[6][3]) :=
	"*";init(board[6][4]) := "$";init(board[6][5]) := "$";
	init(board[6][6]) := ".";init(board[6][7]) := "#"; 

	init(board[7][0]) := "#"; init(board[7][1]) :=
	"_";init(board[7][2]) := "_";init(board[7][3]) :=
	"_";init(board[7][4]) := ".";init(board[7][5]) := "_";
	init(board[7][6]) := "_";init(board[7][7]) := "#"; 

	init(board[8][0]) := "#"; init(board[8][1]) :=
	"#";init(board[8][2]) := "#";init(board[8][3]) :=
	"#";init(board[8][4]) := "#";init(board[8][5]) := "#";
	init(board[8][6]) := "#";init(board[8][7]) := "#"; 

	init(row) := 2;
	init(col) := 2;


	-- The transitions

	next(direction) :=
			case
				left & right & up & down		: {l, r, u, d};

				left & right & up & !down   		: {l, r, u};
				left & right & !up & down 		: {l, r, d};
				left & !right & up & down 		: {l, u, d};
				!left & right & up & down 		: {u, r, d};

				!left & !right & up & down		: {u, d};
				!left & right & !up & down		: {r, d};
				!left & right & up & !down		: {r, u};
				left & !right & !up & down		: {l, d};
				left & !right & up & !down		: {l, u};
				left & right & !up & !down		: {l, r};

				left & !right & !up & !down		: {l};
				!left & right & !up & !down		: {r};
				!left & !right & up & !down		: {u};
				!left & !right & !up & down		: {d};

				-- !left & !right & !up & !down		: {stop};

			esac;

	next(row) :=
		  case
			next(direction) = d  : row + 1;
			next(direction) = u : row - 1;
		esac;